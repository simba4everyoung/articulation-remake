// Universal box-sizing
@mixin set-box-sizing {
    *,
    *:before,
    *:after {
        box-sizing: border-box;
    }
}

/* @mixin placeholder {
    ::-webkit-input-placeholder {
        @content;
    }
    :-moz-placeholder {
        @content;
    }
    ::-moz-placeholder {
        @content;
    }
    :-ms-input-placeholder {
        @content;
    }
} */

@mixin selection($bgcolor, $color) {
    ::-moz-selection {
        background-color: $bgcolor;
        color: $color;
    }
    ::selection {
        background-color: $bgcolor;
        color: $color;
    }
}

@mixin arrow($width, $color) {
    border-left: $width solid $color;
    border-bottom: $width solid transparent;
    border-top: $width solid transparent;
}

@mixin setWH($width, $height: $width, $ratio: 1) {
    width: $width * $ratio;
    height: $height * $ratio;
}

@mixin placeholder($color, $font-weight: 400) {
    ::-webkit-input-placeholder {
        color: $color;
        font-weight: $font-weight;
    }
    :-moz-placeholder {
        color: $color;
        font-weight: $font-weight;
    }
    ::-moz-placeholder {
        color: $color;
        font-weight: $font-weight;
    }
    :-ms-input-placeholder {
        color: $color;
        font-weight: $font-weight;
    }
}

//px to em
@function em($target, $context: $base-font-size) {
    @if $target==0 {
        @return 0
    }
    @return $target / $context + 0em;
}

//px to rem
@function rem($target, $context: $base-font-size) {
    @if $target==0 {
        @return 0
    }
    @return $target / $context + 0rem;
}

// ***************************************  CSS Triangles ***************************************//
@mixin triangle($width, $color: black, $type: right) {
    width: 0;
    height: 0;
    @if $type==top {
        border-left: $width solid transparent;
        border-right: $width solid transparent;
        border-bottom: $width solid $color;
    }
    @else if $type==left {
        border-top: $width solid transparent;
        border-bottom: $width solid transparent;
        border-right: $width solid $color;
    }
    @else if $type==bottom {
        border-left: $width solid transparent;
        border-right: $width solid transparent;
        border-top: $width solid $color;
    }
    @else if $type==right {
        border-top: $width solid transparent;
        border-bottom: $width solid transparent;
        border-left: $width solid $color;
    }
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
